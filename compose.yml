version: "3.8"

services:

###################################################################
# Minio Dependency
###################################################################
  minio:
    image: minio/minio:latest
    container_name: minio-server
    hostname: minio
    env_file:
      - ./.env
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-localtrack}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-ReplaceMePassword}
    volumes:
      - ${DATA_DIR}/minio_data:/minio_data
    command: server --console-address ":9001" /minio_data
    networks:
      - minio-net
###################################################################
# Services
###################################################################
  fastapi:
    image: mbari/fastapi-localtrack:${GIT_VERSION}
    container_name: fastapi-localtrack
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/health"]
    env_file:
      - ./.env
    environment:
      - DATABASE_DIR=/sqlite_data
    ports:
      - "8000:80"
    volumes:
      - ./config.yml:/app/config.yml
      - ${DATA_DIR}/sqlite_data:/sqlite_data
    networks:
      - minio-net
    restart: always
  daemon:
    image: mbari/fastapi-localtrack-daemon:${GIT_VERSION}
    container_name: fastapi-localtrack-daemon
    depends_on:
      - fastapi
    env_file:
      - ./.env
    environment:
      - NOTIFY_URL=${NOTIFY_URL}
      - MODEL_DIR=/models
      - DATABASE_DIR=/sqlite_data
      - NUM_GPUS=1
    volumes:
      - ./config.yml:/app/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - scratch:/tmp
      - ${DATA_DIR}/sqlite_data:/sqlite_data
      - ${CRED_DIR}:/root/.aws
      - ${MODEL_DIR}:/models
    networks:
      - minio-net
    restart: always
    privileged: true
###################################################################
#  Setup Minio
###################################################################
  mc-minio:
    image: minio/mc:RELEASE.2023-09-22T05-07-46Z
    container_name: setup-minio
    depends_on:
      - minio
    env_file:
      - ./.env
    networks:
      - minio-net
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 ${MINIO_ACCESS_KEY} ${MINIO_SECRET_KEY};
      mc mb --ignore-existing myminio/${ROOT_BUCKET_NAME}/${MODEL_PREFIX};
      mc mb --ignore-existing myminio/${ROOT_BUCKET_NAME}/${MODEL_PREFIX}/track-config;
      mc mb --ignore-existing myminio/${ROOT_BUCKET_NAME}/${TRACK_PREFIX};
      mc admin user add myminio fastapi ${MINIO_LIVE_ACCESS_KEY};
      mc admin policy list myminio;
      mc admin policy attach myminio readwrite --user fastapi; 
      curl -O https://902005-public.s3.us-west-2.amazonaws.com/models/Megadetector/best.pt;
      curl -O https://902005-public.s3.us-west-2.amazonaws.com/models/track-config/strong_sort_benthic.yaml;
      mc cp strong_sort_benthic.yaml myminio/${ROOT_BUCKET_NAME}/${MODEL_PREFIX}/track-config/strong_sort_benthic.yaml;
      mc cp best.pt myminio/${ROOT_BUCKET_NAME}/${MODEL_PREFIX}/MegadetectorTest.pt;
      exit ;
      "
    volumes:
      - ${DATA_DIR}/objects:/data

volumes:
    scratch:

networks:
  minio-net:
    external: true
